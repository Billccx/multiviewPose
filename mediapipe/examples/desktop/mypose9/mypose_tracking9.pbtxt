# MediaPipe graph that performs pose tracking with TensorFlow Lite on CPU.

# CPU buffer. (ImageFrame)

input_stream: "input_frameset0"
input_stream: "input_frameset1"

output_stream: "output_landmarks"
#new add
output_stream: "output_video0"
output_stream: "output_video1"




node {
  calculator: "FlowLimiterCalculator"
  input_stream: "input_frameset0"
  input_stream: "FINISHED:output_landmarks"
  input_stream_info: {
    tag_index: "FINISHED"
    back_edge: true
  }
  output_stream: "throttled_input_frameset0"
}

node {
  calculator: "FlowLimiterCalculator"
  input_stream: "input_frameset1"
  input_stream: "FINISHED:output_landmarks"
  input_stream_info: {
    tag_index: "FINISHED"
    back_edge: true
  }
  output_stream: "throttled_input_frameset1"
}

node{
  calculator: "UnpackerCalculator2"
  input_stream: "FRAMESET:throttled_input_frameset0"
  output_stream: "IMAGE:throttled_input_video0"
  output_stream: "DEPTH:throttled_input_depth0"
}

node{
  calculator: "UnpackerCalculator2"
  input_stream: "FRAMESET:throttled_input_frameset1"
  output_stream: "IMAGE:throttled_input_video1"
  output_stream: "DEPTH:throttled_input_depth1"
}


# Subgraph that detects poses and corresponding landmarks.
# new add output_stream: "WORLD_LANDMARKS:pose_world_landmarks" 
node {
  calculator: "PoseLandmarkCpu"
  input_stream: "IMAGE:throttled_input_video0"
  output_stream: "LANDMARKS:pose_landmarks0"
  output_stream: "WORLD_LANDMARKS:pose_world_landmarks0"

  output_stream: "DETECTION:pose_detection0"
  output_stream: "SEGMENTATION_MASK:segmentation_mask0"
  output_stream: "ROI_FROM_LANDMARKS:roi_from_landmarks0"

}

node {
  calculator: "PoseLandmarkCpu"
  input_stream: "IMAGE:throttled_input_video1"
  output_stream: "LANDMARKS:pose_landmarks1"
  output_stream: "WORLD_LANDMARKS:pose_world_landmarks1" 

  output_stream: "DETECTION:pose_detection1"
  output_stream: "SEGMENTATION_MASK:segmentation_mask1"
  output_stream: "ROI_FROM_LANDMARKS:roi_from_landmarks1"
}

node{
  #executor: "model_executor"
  calculator: "TriangulationCalculator8"
  input_stream: "NORM_FILTERED_LANDMARKS:0:pose_landmarks0"
  input_stream: "NORM_FILTERED_LANDMARKS:1:pose_landmarks1"

  input_stream: "DEPTH_MAT:0:throttled_input_depth0"
  input_stream: "DEPTH_MAT:1:throttled_input_depth1"

  output_stream: "FUSED_NORM_FILTERED_LANDMARKS:output_landmarks"

  node_options: {
      [type.googleapis.com/mediapipe.TriangulationCalculatorOptions] {
        parameterfile: "mediapipe/models/detection_model.tflite"
      }
  }
}


# new add
node {
  calculator: "PoseRendererCpu"
  input_stream: "IMAGE:throttled_input_video0"
  input_stream: "LANDMARKS:pose_landmarks0"
  input_stream: "SEGMENTATION_MASK:segmentation_mask0"
  input_stream: "DETECTION:pose_detection0"
  input_stream: "ROI:roi_from_landmarks0"
  output_stream: "IMAGE:output_video0"
}

node {
  calculator: "PoseRendererCpu"
  input_stream: "IMAGE:throttled_input_video1"
  input_stream: "LANDMARKS:pose_landmarks1"
  input_stream: "SEGMENTATION_MASK:segmentation_mask1"
  input_stream: "DETECTION:pose_detection1"
  input_stream: "ROI:roi_from_landmarks1"
  output_stream: "IMAGE:output_video1"
}
